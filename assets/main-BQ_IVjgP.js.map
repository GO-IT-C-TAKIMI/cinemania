{"version":3,"file":"main-BQ_IVjgP.js","sources":["../../src/js/header.js","../../src/js/mydetailsfunction.js","../../src/js/displayMovieRating.js","../../src/js/addRemoveCheck.js","../../src/js/hero.js","../../src/js/movielist.js","../../src/js/upcoming.js","../../src/js/footer.js","../../src/js/theme.js","../../src/js/mylibraryUpdate.js","../../src/main.js"],"sourcesContent":["export function header() {\n  const currentPath = window.location.pathname;\n  const links = document.querySelectorAll(\"#header-links a\");\n  const menuButton = document.querySelector(\".menu-button\");\n  const overlay = document.querySelector('.responsive-overlay');\n  const responsiveMenu = document.querySelector('.responsive-menu');\n  const body = document.querySelector('body');\n  \n\n  let isMenuOpen = false;\n\n  menuButton.addEventListener('click', () => {\n    responsiveMenu.classList.add('active-responsive-menu');\n    overlay.classList.add('active-overlay');\n    body.style.overflow = 'hidden';\n    isMenuOpen = true;\n  });\n\n  document.addEventListener('click', (event) => {\n    if (\n      isMenuOpen &&\n      !responsiveMenu.contains(event.target) &&\n      !menuButton.contains(event.target)\n    ) {\n      responsiveMenu.classList.remove('active-responsive-menu');\n      overlay.classList.remove('active-overlay');\n      body.style.overflow = 'auto';\n      isMenuOpen = false;\n    }\n  });\n\n\n  window.addEventListener('resize', () => {\n\n    if (isMenuOpen) { // Menü açıksa kapat\n    responsiveMenu.classList.remove('active-responsive-menu');\n    overlay.classList.remove('active-overlay');\n    body.style.overflow = 'auto';\n    isMenuOpen = false; // Menü kapatıldı\n  }\n  });\n\n\n  links.forEach(link => {\n    const linkHref = new URL(link.getAttribute('href'), window.location.origin).pathname;\n\n    if (linkHref === currentPath) {\n      link.classList.add('active-link');\n    }\n  });\n}","export function myDetailsFunction(popupId) {\n  const api_key = '3e7bd78082a78694a13d5e52c5addee0';\n\n  const popupSectionContainer = document.querySelector(\n    '.popup-section-container'\n  );\n  const popupSection = document.querySelector('.popup-section');\n  const closeBtn = document.querySelector('.close-btn');\n  const body = document.querySelector('body');\n  const filmPoster = document.querySelector('.afis-img');\n  const filmTitle = document.querySelector('.film-title');\n  const averageRating = document.querySelector('.average-rating');\n  const voteCount = document.querySelector('.vote-count');\n  const genre = document.querySelector('.genre');\n  const popularity = document.querySelector('.popularity');\n  const overview = document.querySelector('.film-about-desc');\n  const fetchDetails = async () => {\n    displayLoadingState();\n    \n    try {\n      const res = await fetch(\n        `https://api.themoviedb.org/3/movie/${popupId}?api_key=${api_key}&language=en-US`\n      );\n      const data = await res.json();\n      displayDetails(data);\n    } catch (error) {\n      console.error('Error fetching details:', error);\n    }\n  };\n\n  fetchDetails();\n\n  function displayDetails(data) {\n    filmPoster.src = `https://image.tmdb.org/t/p/original/${data.poster_path}`;\n    filmTitle.textContent = data.title;\n    averageRating.textContent = data.vote_average;\n    voteCount.textContent = data.vote_count;\n    popularity.textContent = data.popularity.toFixed(1);\n    genre.textContent = data.genres.map(genre => genre.name).join(', ');\n    overview.textContent = data.overview;\n\n    let isModalOpen = false;\n\n    function closeModal() {\n      popupSectionContainer.classList.add('hidden');\n      body.style.overflow = 'auto';\n      isModalOpen = false;\n      document.removeEventListener('click', handleOutsideClick);\n      document.removeEventListener('keydown', handleEscapePress);\n      closeBtn.removeEventListener('click', handleCloseClick);\n    }\n\n    function handleOutsideClick(e) {\n      if (isModalOpen && !popupSection.contains(e.target)) {\n        closeModal();\n      }\n    }\n\n    function handleCloseClick(e) {\n      if (isModalOpen) {\n        closeModal();\n      }\n    }\n\n    function handleEscapePress(e) {\n      if (isModalOpen && e.key === 'Escape') {\n        closeModal();\n      }\n    }\n\n    if (!popupSectionContainer.classList.contains('hidden')) {\n      isModalOpen = true;\n      document.addEventListener('click', handleOutsideClick);\n      document.addEventListener('keydown', handleEscapePress);\n      closeBtn.addEventListener('click', handleCloseClick);\n      \n    }\n  }\n  function displayLoadingState() {\n    filmPoster.src = 'loading-placeholder.png'; // Bir yüklenme resmi olabilir\n    filmTitle.textContent = 'Loading...';\n    averageRating.textContent = '';\n    voteCount.textContent = '';\n    popularity.textContent = '';\n    genre.textContent = '';\n    overview.textContent = 'Fetching details, please wait...';\n  }\n}\n","export function displayMovieRating(vote_average) {\n  const stars = [\n    {\n      name: 'fullStar',\n      svg: `<svg width=\"24\" height=\"24\" class=\"star-icon-full\">\n                  <use class=\"full-star\" href=\"svg/symbol-defs.svg#icon-star-outline\"></use>\n                </svg>`,\n    },\n    {\n      name: 'halfStar',\n      svg: `<svg width=\"24\" height=\"24\" class=\"star-icon-half\">\n                  <use href=\"svg/symbol-defs.svg#icon-star-half\"></use>\n                </svg>`,\n    },\n    {\n      name: 'emptyStar',\n      svg: `<svg width=\"24\" height=\"24\" class=\"star-icon-empty\">\n                  <use href=\"svg/symbol-defs.svg#icon-star-outline\"></use>\n                </svg>`,\n    },\n  ];\n\n  const maxStars = 5;\n  const fullStars = Math.floor(vote_average / 2);\n  const hasHalfStar = vote_average % 2 >= 0.5;\n  const emptyStars = maxStars - fullStars - (hasHalfStar ? 1 : 0);\n\n  if (vote_average === 0) {\n    return 'NOT RELEASED YET';\n  }\n\n  const fullStarSvg = stars.find(star => star.name === 'fullStar').svg;\n  const halfStarSvg = stars.find(star => star.name === 'halfStar').svg;\n  const emptyStarSvg = stars.find(star => star.name === 'emptyStar').svg;\n\n  let starHTML = fullStarSvg.repeat(fullStars); //tam\n  if (hasHalfStar) starHTML += halfStarSvg; //yari\n  starHTML += emptyStarSvg.repeat(emptyStars); //bos\n\n  return starHTML;\n}\n","export function addToLibrary(filmId) {\n  let library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  if (!library.includes(filmId)) {\n    library.push(filmId);\n    localStorage.setItem('myLibrary', JSON.stringify(library));\n    updateLibraryButton(true, filmId);\n  }\n}\nexport function removeFromLibrary(filmId) {\n  const pathname = window.location.pathname;\n  let library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  library = library.filter(id => id !== filmId);\n  localStorage.setItem('myLibrary', JSON.stringify(library));\n  updateLibraryButton(false, filmId);\n\n  if (pathname === '/mylibrary.html') {\n    removeMovieFromUI(filmId);\n    closeModal();\n  }\n}\n\nfunction removeMovieFromUI(filmId) {\n  const movieCard = document.querySelector(`[data-movie-id=\"${filmId}\"]`);\n  if (movieCard) {\n    movieCard.remove();\n  }\n  const library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  const mylibraryContainer = document.querySelector('#catalog-movie-gallery');\n\n  if (library.length === 0) {\n    mylibraryContainer.innerHTML = '<p>Your library is empty.</p>';\n  }\n}\n\nfunction closeModal() {\n  const modal = document.querySelector('.popup-section-container');\n  if (modal) {\n    modal.classList.add('hidden');\n    document.body.style.overflow = 'auto';\n  }\n}\n\nexport function checkLibrary(filmId) {\n  const library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  return library.includes(filmId);\n}\nexport function updateLibraryButton(isInLibrary, filmId) {\n  const addBtn = document.querySelectorAll('.add-btn');\n  const removeBtn = document.querySelectorAll('.remove-btn');\n\n  if (isInLibrary) {\n    addBtn.forEach(btn => btn.classList.add('hidden'));\n    removeBtn.forEach(btn => btn.classList.remove('hidden'));\n  } else {\n    addBtn.forEach(btn => btn.classList.remove('hidden'));\n    removeBtn.forEach(btn => btn.classList.add('hidden'));\n  }\n  addBtn.forEach(btn => (btn.onclick = () => addToLibrary(filmId)));\n  removeBtn.forEach(btn => (btn.onclick = () => removeFromLibrary(filmId)));\n}\n\nexport function updateLibraryUpcomingButton(filmId) {\n  const addBtnUpcoming = document.getElementById('upcoming-add-btn');\n  const removeBtnUpcoming = document.getElementById('upcoming-remove-btn');\n\n  function refreshButtons() {\n    const isInLibrary = checkLibrary(filmId);\n    if (isInLibrary) {\n      addBtnUpcoming.classList.add('hidden');\n      removeBtnUpcoming.classList.remove('hidden');\n    } else {\n      addBtnUpcoming.classList.remove('hidden');\n      removeBtnUpcoming.classList.add('hidden');\n    }\n  }\n\n  addBtnUpcoming.onclick = () => {\n    addToLibrary(filmId);\n    refreshButtons(); // Butonları güncelle\n  };\n\n  \n  removeBtnUpcoming.onclick = () => {\n    removeFromLibrary(filmId);\n    refreshButtons();\n  };\n\n  refreshButtons();\n}\n","import { myDetailsFunction } from './mydetailsfunction.js';\nimport { displayMovieRating } from './displayMovieRating.js';\nimport { checkLibrary, updateLibraryButton } from './addRemoveCheck.js';\n\nexport function hero() {\n  const api_key = '3e7bd78082a78694a13d5e52c5addee0';\n  const pathname = window.location.pathname;\n  const imageContainer = document.getElementById('movies-image-container');\n  const descriptionContainer = document.getElementById(\n    'movies-description-container'\n  );\n  const popupContainer = document.querySelector('.popup-section-container');\n  const body = document.querySelector('body');\n\n  const initialContent = () => {\n    if (pathname === '/' || pathname === '/catalog.html') {\n      imageContainer.innerHTML =\n        '<img class=\"image\" src=\"./img/stranger_things.jpeg\"/>';\n      descriptionContainer.innerHTML = `\n        <h1 class=\"hero-movie-title\">Let's Make Your Own Cinema</h1>\n        <div class=\"desc-button-container\">\n          <p class=\"hero-movie-desc\">Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.</p>\n          <div class=\"hero-movie-buttons\">\n            <button class=\"orange-button btn-hero trailer\">Get Started</button>\n          </div>\n        </div>\n      `;\n    } else {\n      imageContainer.innerHTML = '<img class=\"image\" src=\"./img/seats.png\"/>';\n      descriptionContainer.innerHTML = `\n        <h1 class=\"hero-movie-title\">Create Your Dream Cinema</h1>\n        <div class=\"desc-button-container\">\n          <p class=\"hero-movie-desc\"> Is a guide to designing a personalized movie theater experience with the right equipment, customized decor, and favorite films. This guide helps you bring the cinema experience into your own home with cozy seating, dim lighting, and movie theater snacks.</p>\n        </div>\n      `;\n    }\n  };\n\n  const fetchTrendingByDay = async () => {\n    try {\n      const res = await fetch(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${api_key}&language=en-US`\n      );\n\n      if (!res.ok) {\n        initialContent();\n        throw new Error('Failed to fetch trending movies');\n      }\n\n      const data = await res.json();\n      const movies = data.results;\n      const filteredMovies = movies.filter(movie => {\n        const releaseYear = new Date(movie.release_date).getFullYear();\n        return releaseYear >= 2024;\n      });\n      const randomMovie =\n        filteredMovies[Math.floor(Math.random() * filteredMovies.length)];\n      displayMovie(randomMovie);\n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n    }\n  };\n\n  const displayMovie = async movie => {\n    try {\n      const res = await fetch(\n        `https://api.themoviedb.org/3/movie/${movie.id}/images?&api_key=${api_key}&language=en&language=null`\n      );\n      const imageData = await res.json();\n      const movieImage =\n        imageData.backdrops[\n          Math.floor(Math.random() * imageData.backdrops.length)\n        ];\n      const movieOverview = movie.overview.split(' ').slice(0, 40).join(' ');\n\n      imageContainer.innerHTML += `<img class=\"image\" src=\"https://image.tmdb.org/t/p/original${movieImage.file_path}\" />`;\n      descriptionContainer.innerHTML += `\n        <h1 class=\"hero-movie-title\">${movie.title}</h1>\n        <div class=\"stars-container\" id=\"starsContainer\"></div>\n        <div class=\"desc-button-container\">\n          <p class=\"hero-movie-desc\">${movieOverview}...</p>\n          <div class=\"hero-movie-buttons\">\n            <button id=\"trailer\" class=\"orange-button btn-hero trailer\">Watch trailer</button>\n            <button id=\"details\" class=\"white-button btn-hero details\">More details</button>\n          </div>\n        </div>\n      `;\n\n      starsContainer.innerHTML = displayMovieRating(movie.vote_average);\n      const trailerButton = document.getElementById('trailer');\n      const detailsButton = document.getElementById('details');\n      \n      displayMovieRating(movie.vote_average);\n\n\n      detailsButton.addEventListener('click', () => {\n        popupContainer.classList.remove('hidden');\n        body.style.overflow = 'hidden';\n        const movieID = movie.id;\n        myDetailsFunction(movieID);\n        const isInLibrary = checkLibrary(movieID);\n        updateLibraryButton(isInLibrary, movieID);\n      });\n\n      trailerButton.addEventListener('click', async () => {\n        modal.innerHTML = '';\n        try {\n          const res = await fetch(\n            `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${api_key}&language=en-US`\n          );\n          const data = await res.json();\n          const trailer = data.results.find(\n            result => result.type === 'Trailer' || result.type === 'Teaser'\n          );\n\n          if (trailer) {\n            modal.innerHTML += `<iframe src=\"https://www.youtube.com/embed/${trailer.key}\" allowfullscreen></iframe>`;\n          } else {\n            modal.innerHTML += `<p>No trailer available</p>`; // Fragman yoksa\n          }\n        } catch (error) {\n          console.error('Error fetching trailer:', error);\n          modal.innerHTML += `<p>Error loading trailer</p>`;\n        }\n      });\n    } catch (error) {\n      console.error('Error displaying movie:', error);\n    }\n  };\n\n  fetchTrendingByDay();\n}\n","import { myDetailsFunction } from './mydetailsfunction';\nimport { displayMovieRating } from './displayMovieRating';\nimport { updateLibraryButton, checkLibrary } from './addRemoveCheck';\n\nexport async function movielist() {\n  const apiKey = '3e7bd78082a78694a13d5e52c5addee0';\n  const apiUrl =\n    'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=' +\n    apiKey;\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  let query = '';\n  let year = '';\n  const pathname = window.location.pathname;\n  const isCatalogPage = pathname.includes('catalog');\n  const movieGallery = document.getElementById('catalog-movie-gallery');\n  const prevPageBtn = isCatalogPage\n    ? document.getElementById('prevPageBtn')\n    : null;\n  const nextPageBtn = isCatalogPage\n    ? document.getElementById('nextPageBtn')\n    : null;\n  const pageNumbersContainer = isCatalogPage\n    ? document.querySelector('.page-numbers')\n    : null;\n  const searchButton = isCatalogPage\n    ? document.getElementById('searchButton')\n    : null;\n  const mySelect = isCatalogPage ? document.getElementById('movieYear') : null;\n  let currentPage = 1;\n  let genreMap = {};\n  let totalPages = 100;\n\n  async function fetchGenres() {\n    const genreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n\n    try {\n      const response = await fetch(genreUrl);\n      const data = await response.json();\n      genreMap = data.genres.reduce((map, genre) => {\n        map[genre.id] = genre.name;\n        return map;\n      }, {});\n    } catch (error) {\n      console.error('Error fetching genres:', error);\n    }\n  }\n\n  async function fetchMovies(page = 1, query = '', year = '') {\n    const apiPage = Math.ceil((page * 9) / 20);\n\n    let url = `${apiUrl}&page=${apiPage}`;\n    if (query && !year) {\n      url = `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${apiKey}&page=${apiPage}`;\n    } else if (query && year) {\n      url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&primary_release_year=${year}&page=${apiPage}`;\n    }\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      if (pathname.includes('catalog')) {\n        const startIndex = ((page - 1) % 2) * 9;\n        const paginatedResults = data.results.slice(startIndex, startIndex + 9);\n        displayMovies(paginatedResults);\n      } else {\n        const startIndex = ((page - 1) % 2) * 3;\n        const paginatedResults = data.results.slice(startIndex, startIndex + 3);\n        displayMovies(paginatedResults);\n      }\n\n      if (isCatalogPage) {\n        totalPages = Math.min(data.total_pages, 1000);\n        updatePagination();\n      }\n      return data;\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  }\n\n  function displayMovies(movies) {\n    movieGallery.innerHTML = '';\n\n    movies.forEach(movie => {\n      const movieCard = document.createElement('div');\n      movieCard.classList.add('catalog-movie-card');\n      movieCard.dataset.movieId = movie.id;\n\n      const moviePoster = document.createElement('img');\n      moviePoster.src = imageBaseUrl + movie.poster_path;\n      moviePoster.alt = movie.title;\n      moviePoster.classList.add('catalog-movie-poster');\n\n      const movieInfo = document.createElement('div');\n      movieInfo.classList.add('catalog-movie-info');\n\n      const movieTitle = document.createElement('h2');\n      movieTitle.textContent = movie.title;\n      movieTitle.classList.add('catalog-movie-title');\n\n      const movieDetailsRatingDiv = document.createElement('div');\n      movieDetailsRatingDiv.classList.add('catalog-movie-details-rating');\n\n      const movieDetails = document.createElement('p');\n      const genreNames = movie.genre_ids\n        .map(id => genreMap[id] || 'Unknown')\n        .filter(Boolean);\n\n      movieDetails.textContent = `${genreNames[0]}, ${genreNames[1]} | ${\n        movie.release_date.split('-')[0]\n      }`;\n      movieDetails.classList.add('catalog-movie-details');\n\n      const movieRating = document.createElement('p');\n      movieRating.innerHTML = displayMovieRating(movie.vote_average);\n      movieRating.classList.add('catalog-movie-rating');\n\n      movieInfo.appendChild(movieTitle);\n      movieDetailsRatingDiv.appendChild(movieDetails);\n      movieDetailsRatingDiv.appendChild(movieRating);\n      movieInfo.appendChild(movieDetailsRatingDiv);\n      movieCard.appendChild(moviePoster);\n      movieCard.appendChild(movieInfo);\n      movieGallery.appendChild(movieCard);\n    });\n    const catalogCards = document.querySelectorAll('.catalog-movie-card');\n    const popupContainer = document.querySelector('.popup-section-container');\n    const body = document.querySelector('body');\n\n    catalogCards.forEach(catalogCard => {\n      catalogCard.addEventListener('click', e => {\n        const filmId = Number(e.currentTarget.dataset.movieId);\n        myDetailsFunction(filmId);\n        popupContainer.classList.remove('hidden');\n        body.style.overflow = 'hidden';\n        const isInLibrary = checkLibrary(filmId);\n        updateLibraryButton(isInLibrary, filmId);\n      });\n    });\n  }\n\n  function updatePagination() {\n    if (!isCatalogPage) return;\n    pageNumbersContainer.innerHTML = '';\n\n    const totalPageLinks = 3;\n    const sidePageLinks = 1;\n\n    addPageButton(1);\n\n    if (currentPage > sidePageLinks + 2) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pageNumbersContainer.appendChild(dots);\n    }\n\n    const startPage = Math.max(2, currentPage - Math.floor(totalPageLinks / 2));\n    const endPage = Math.min(\n      totalPages - 1,\n      currentPage + Math.floor(totalPageLinks / 2)\n    );\n\n    for (let i = startPage; i <= endPage; i++) {\n      addPageButton(i);\n    }\n\n    if (currentPage < totalPages - sidePageLinks - 1) {\n      const dots = document.createElement('span');\n      dots.textContent = '...';\n      pageNumbersContainer.appendChild(dots);\n    }\n\n    if (totalPages > 1) {\n      addPageButton(totalPages);\n    }\n\n    prevPageBtn.disabled = currentPage === 1;\n    nextPageBtn.disabled = currentPage === totalPages;\n  }\n  async function addPageButton(pageNum) {\n    const pageButton = document.createElement('button');\n    pageButton.textContent = pageNum;\n    pageButton.classList.add('page-number');\n\n    if (pageNum === currentPage) {\n      pageButton.classList.add('active');\n    }\n\n    pageButton.addEventListener('click', async () => {\n      currentPage = pageNum;\n      await fetchMovies(currentPage, query, year);\n      updatePagination();\n    });\n\n    pageNumbersContainer.appendChild(pageButton);\n  }\n\n  if (isCatalogPage) {\n    prevPageBtn.addEventListener('click', async () => {\n      if (currentPage > 1) {\n        currentPage--;\n        await fetchMovies(currentPage);\n        updatePagination();\n      }\n    });\n\n    nextPageBtn.addEventListener('click', async () => {\n      if (currentPage < totalPages) {\n        currentPage++;\n        await fetchMovies(currentPage);\n        updatePagination();\n      }\n    });\n    document.getElementById('movieName').addEventListener('input', () => {\n      const movieYearSelect = document.getElementById('movieYear');\n      movieYearSelect.innerHTML = '';\n      mySelect.style.display = 'none';\n\n      year = '';\n    });\n    searchButton.addEventListener('click', async () => {\n      try {\n        query = document.getElementById('movieName').value;\n        year = document.getElementById('movieYear').value || '';\n\n        const searchvideos = async (query, year = '') => {\n          return await fetchMovies(1, query, year);\n        };\n\n        if (isCatalogPage) {\n          updatePagination();\n        }\n\n        const movies = await searchvideos(query, year);\n        if (movies.results.length === 0) {\n          mySelect.style.display = 'none';\n        } else {\n          mySelect.style.display = 'block';\n        }\n\n        if (Array.isArray(movies.results)) {\n          if (!year) {\n            const years = movies.results\n              .map(movie =>\n                movie.release_date\n                  ? new Date(movie.release_date).getFullYear()\n                  : null\n              )\n              .filter(year => year !== null);\n\n            const uniqueYears = [...new Set(years)].sort((a, b) => a - b);\n            const movieYearSelect = document.getElementById('movieYear');\n\n            if (movieYearSelect.innerHTML === '') {\n              uniqueYears.forEach(year => {\n                const option = document.createElement('option');\n                option.value = year;\n                option.text = year;\n                movieYearSelect.appendChild(option);\n              });\n            }\n          }\n        } else {\n          console.error('Beklenmeyen sonuç: movies bir dizi değil');\n        }\n      } catch (error) {\n        console.error('Film verilerini işlerken hata:', error);\n      }\n    });\n  }\n\n  async function init() {\n    await fetchGenres();\n    await fetchMovies();\n  }\n\n  init();\n}\n","import { updateLibraryUpcomingButton } from './addRemoveCheck.js';\nexport function upcoming() {\n  console.log('upcoming sayfasinin js i calisti');\n\n  const apiKey = '3e7bd78082a78694a13d5e52c5addee0'; // API anahtarı\n  const upcomingURL = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US`;\n  const genreURL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`; // Genre listesini almak için\n  const moviePoster = document.getElementById('movie-poster');\n  const movieTitle = document.getElementById('movie-title');\n  const releaseDate = document.getElementById('release-date');\n  const movieVote = document.getElementById('vote-average');\n  const voteCount = document.getElementById('vote-count');\n  const popularity = document.getElementById('popularity');\n  const genres = document.getElementById('genres');\n  const overview = document.getElementById('overview');\n\n  let genreMap = {}; // Genre ID'lerini isimlerle eşleştirmek için\n\n  // Genre listesini çek\n  fetch(genreURL)\n    .then(response => response.json())\n    .then(data => {\n      data.genres.forEach(genre => {\n        genreMap[genre.id] = genre.name; // Genre ID'lerini isimlere eşleştir\n      });\n\n      // Ardından upcoming filmleri çek\n      fetch(upcomingURL)\n        .then(response => response.json())\n        .then(data => {\n          const films = data.results;\n          if (films.length > 0) {\n            const randomFilm = films[Math.floor(Math.random() * films.length)];\n            displayFilm(randomFilm);\n          } else {\n            document.querySelector('.upcoming__title').textContent =\n              'No upcoming movies this month';\n          }\n        })\n        .catch(error => console.error('Error fetching movies:', error));\n    })\n    .catch(error => console.error('Error fetching genres:', error));\n\n  function displayFilm(film) {\n    moviePoster.src = `https://image.tmdb.org/t/p/original/${film.backdrop_path}`;\n    moviePoster.alt = film.title;\n    movieTitle.textContent = film.title;\n    releaseDate.textContent = film.release_date;\n    movieVote.textContent = film.vote_average;\n    voteCount.textContent = film.vote_count;\n    popularity.textContent = film.popularity;\n    genres.textContent = film.genre_ids.map(id => genreMap[id]).join(', ');\n\n    if (film.overview && film.overview.trim() !== '') {\n      overview.textContent = film.overview;\n    } else {\n      overview.textContent = 'No overview available for this movie.';\n    }\n\n    updateLibraryUpcomingButton(film.id);\n  }\n}\n","export function footer() {\n    console.log('footer sayfasinin js i calisti')\n}","export default function theme() {\n  document.addEventListener('DOMContentLoaded', () => {\n    const themeToggleBtn = document.getElementById('theme-toggle');\n    const currentTheme = localStorage.getItem('theme') || 'light-theme';\n    document.body.classList.add(currentTheme);\n\n    themeToggleBtn.addEventListener('click', () => {\n      document.body.classList.toggle('light-theme');\n      document.body.classList.toggle('dark-theme');\n\n      const newTheme = document.body.classList.contains('dark-theme')\n        ? 'dark-theme'\n        : 'light-theme';\n      localStorage.setItem('theme', newTheme);\n    });\n  });\n}\n","import { myDetailsFunction } from './mydetailsfunction';\nimport { updateLibraryButton, checkLibrary } from './addRemoveCheck';\nimport { displayMovieRating } from './displayMovieRating';\n\nexport function mylibraryUpdate() {\n  const mylibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  let fetchedMovies = [];\n  let filteredMovies = [];\n  const mylibraryContainer = document.querySelector('#catalog-movie-gallery');\n  const loadMoreButton = document.querySelector('.load-more-button');\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500';\n\n  let currentIndex = 0;\n  const moviesPerPage = 9;\n\n  // Başlangıçta API'den tüm filmleri çek.\n  const getMovies = async () => {\n    try {\n      const filmPromises = mylibrary.map(async filmID => {\n        const res = await fetch(\n          `https://api.themoviedb.org/3/movie/${filmID}?api_key=3e7bd78082a78694a13d5e52c5addee0&language=en-US`\n        );\n        if (!res.ok) throw new Error('API request failed');\n        return res.json();\n      });\n\n      fetchedMovies = await Promise.all(filmPromises);\n      filteredMovies = fetchedMovies; // İlk başta tüm filmleri göster.\n      renderMovies();\n      selectGenre(fetchedMovies); // Genre select oluştur.\n    } catch (e) {\n      console.error('Error fetching films:', e);\n    }\n  };\n\n  function renderMovies() {\n    const nextMovies = filteredMovies.slice(currentIndex, currentIndex + moviesPerPage);\n\n    nextMovies.forEach(movie => {\n      const movieCard = createMovieCard(movie);\n      mylibraryContainer.appendChild(movieCard);\n    });\n\n    currentIndex += moviesPerPage;\n\n    if (currentIndex >= filteredMovies.length) {\n      loadMoreButton.classList.add('hidden');\n    } else {\n      loadMoreButton.classList.remove('hidden');\n    }\n  }\n\n  function createMovieCard(movie) {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('catalog-movie-card');\n    movieCard.dataset.movieId = movie.id;\n\n    const moviePoster = document.createElement('img');\n    moviePoster.src = imageBaseUrl + movie.poster_path;\n    moviePoster.alt = movie.title;\n    moviePoster.classList.add('catalog-movie-poster');\n\n    const movieInfo = document.createElement('div');\n    movieInfo.classList.add('catalog-movie-info');\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieTitle.classList.add('catalog-movie-title');\n\n    const movieDetailsRatingDiv = document.createElement('div');\n    movieDetailsRatingDiv.classList.add('catalog-movie-details-rating');\n\n    const movieDetails = document.createElement('p');\n    const genreNames = movie.genres.map(genre => genre.name);\n    movieDetails.textContent = `${genreNames[0]}, ${genreNames[1]} | ${\n      movie.release_date.split('-')[0]\n    }`;\n    movieDetails.classList.add('catalog-movie-details');\n\n    const movieRating = document.createElement('p');\n    movieRating.innerHTML = displayMovieRating(movie.vote_average);\n    movieRating.classList.add('catalog-movie-rating');\n\n    movieInfo.appendChild(movieTitle);\n    movieDetailsRatingDiv.appendChild(movieDetails);\n    movieDetailsRatingDiv.appendChild(movieRating);\n    movieInfo.appendChild(movieDetailsRatingDiv);\n    movieCard.appendChild(moviePoster);\n    movieCard.appendChild(movieInfo);\n\n    movieCard.addEventListener('click', () => {\n      myDetailsFunction(movie.id);\n      document.querySelector('.popup-section-container').classList.remove('hidden');\n      document.body.style.overflow = 'hidden';\n\n      const isInLibrary = checkLibrary(movie.id);\n      updateLibraryButton(isInLibrary, movie.id);\n    });\n\n    return movieCard;\n  }\n\n  function selectGenre(films) {\n    const selectionGenre = document.getElementById('film-category');\n    const allGenres = new Set();\n\n    films.forEach(film => {\n      film.genres.forEach(genre => {\n        allGenres.add(genre.name);\n      });\n    });\n\n    allGenres.forEach(genre => {\n      const optionSelect = document.createElement('option');\n      optionSelect.value = genre;\n      optionSelect.innerText = genre;\n      selectionGenre.appendChild(optionSelect);\n    });\n\n    selectionGenre.addEventListener('change', event => {\n      const selectedGenre = event.target.value;\n      mylibraryContainer.innerHTML = ''; // Eski kartları temizle.\n      currentIndex = 0; // Yeni filtrede baştan başla.\n\n      if (selectedGenre === '') {\n        filteredMovies = fetchedMovies; // Tüm filmleri göster.\n      } else {\n        filteredMovies = fetchedMovies.filter(film =>\n          film.genres.some(genre => genre.name === selectedGenre)\n        );\n      }\n\n      renderMovies(); // Yeni filmleri göster.\n    });\n  }\n\n  loadMoreButton.addEventListener('click', renderMovies);\n\n  if (mylibrary.length > 0) {\n    getMovies();\n  } else {\n    console.log('Library is empty');\n  }\n}\n\n","import { header } from './js/header';\nimport { hero } from './js/hero';\nimport { movielist } from './js/movielist';\nimport { upcoming } from './js/upcoming';\nimport { footer } from './js/footer';\nimport theme from './js/theme';\nimport { mylibraryUpdate } from './js/mylibraryUpdate';\n\nif (window.location.pathname === '/catalog.html') {\n  header();\n  hero();\n  movielist();\n  footer();\n  theme();\n}\nif (window.location.pathname === '/mylibrary.html') {\n  header();\n  hero();\n  footer();\n  theme();\n  mylibraryUpdate();\n}\nif (window.location.pathname === '/') {\n  header();\n  hero();\n  upcoming();\n  movielist();\n  footer();\n  theme();\n}\n"],"names":["header","currentPath","links","menuButton","overlay","responsiveMenu","body","isMenuOpen","event","link","myDetailsFunction","popupId","api_key","popupSectionContainer","popupSection","closeBtn","filmPoster","filmTitle","averageRating","voteCount","genre","popularity","overview","displayLoadingState","data","displayDetails","error","isModalOpen","closeModal","handleOutsideClick","handleEscapePress","handleCloseClick","e","displayMovieRating","vote_average","stars","maxStars","fullStars","hasHalfStar","emptyStars","fullStarSvg","star","halfStarSvg","emptyStarSvg","starHTML","addToLibrary","filmId","library","updateLibraryButton","removeFromLibrary","pathname","id","removeMovieFromUI","movieCard","mylibraryContainer","modal","checkLibrary","isInLibrary","addBtn","removeBtn","btn","updateLibraryUpcomingButton","addBtnUpcoming","removeBtnUpcoming","refreshButtons","hero","imageContainer","descriptionContainer","popupContainer","initialContent","fetchTrendingByDay","res","filteredMovies","movie","randomMovie","displayMovie","imageData","movieImage","movieOverview","trailerButton","detailsButton","movieID","trailer","result","movielist","apiKey","apiUrl","imageBaseUrl","query","year","isCatalogPage","movieGallery","prevPageBtn","nextPageBtn","pageNumbersContainer","searchButton","mySelect","currentPage","genreMap","totalPages","fetchGenres","genreUrl","map","fetchMovies","page","apiPage","url","startIndex","paginatedResults","displayMovies","updatePagination","movies","moviePoster","movieInfo","movieTitle","movieDetailsRatingDiv","movieDetails","genreNames","movieRating","catalogCards","catalogCard","totalPageLinks","sidePageLinks","addPageButton","dots","startPage","endPage","i","pageNum","pageButton","movieYearSelect","searchvideos","years","uniqueYears","a","option","init","upcoming","upcomingURL","genreURL","releaseDate","movieVote","genres","response","films","randomFilm","displayFilm","film","footer","theme","themeToggleBtn","currentTheme","newTheme","mylibraryUpdate","mylibrary","fetchedMovies","loadMoreButton","currentIndex","moviesPerPage","getMovies","filmPromises","filmID","renderMovies","selectGenre","createMovieCard","selectionGenre","allGenres","optionSelect","selectedGenre"],"mappings":"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"}